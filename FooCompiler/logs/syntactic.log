
Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <PROGRAM>

Desfileirando...
Símbolo TERMINAL no começo da fila: startCode

(transition def) Teste Transição --> Não Terminal: <PROGRAM>  |  Terminal: startCode
(transition def) Id Gramática: 0

Id Gramática: 0
Gramática: ['startCode', 'tk_abre_bloco', '<VARIABLE_LIST>', '<COMMAND_LIST>', 'tk_fecha_bloco', 'endCode']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: startCode
Sentença reconhecida: startCode -> startCode

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_abre_bloco
Sentença reconhecida: tk_abre_bloco -> tk_abre_bloco

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <VARIABLE_LIST>

Desfileirando...
Símbolo TERMINAL no começo da fila: int

(transition def) Teste Transição --> Não Terminal: <VARIABLE_LIST>  |  Terminal: int
(transition def) Id Gramática: 1

Id Gramática: 1
Gramática: ['<VARIABLE>', '<VARIABLE_LIST>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <VARIABLE>

Desfileirando...
Símbolo TERMINAL no começo da fila: int

(transition def) Teste Transição --> Não Terminal: <VARIABLE>  |  Terminal: int
(transition def) Id Gramática: 3

Id Gramática: 3
Gramática: ['<TYPE_VARIABLE>', '<ATRIB>', 'tk_final']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <TYPE_VARIABLE>

Desfileirando...
Símbolo TERMINAL no começo da fila: int

(transition def) Teste Transição --> Não Terminal: <TYPE_VARIABLE>  |  Terminal: int
(transition def) Id Gramática: 5

Id Gramática: 5
Gramática: ['int']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: int
Sentença reconhecida: int -> int

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <ATRIB>

Desfileirando...
Símbolo TERMINAL no começo da fila: char

(transition def) Teste Transição --> Não Terminal: <ATRIB>  |  Terminal: char
(transition def) Id Gramática: 4

Id Gramática: 4
Gramática: ['char', '<LOGIC>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: char
Sentença reconhecida: char -> char

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <LOGIC>

Desfileirando...
Símbolo TERMINAL no começo da fila: tk_final

(transition def) Teste Transição --> Não Terminal: <LOGIC>  |  Terminal: tk_final
(transition def) Id Gramática: 30

Id Gramática: 30
Gramática: ['î']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_final
Sentença reconhecida: tk_final -> tk_final

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <VARIABLE_LIST>

Desfileirando...
Símbolo TERMINAL no começo da fila: int

(transition def) Teste Transição --> Não Terminal: <VARIABLE_LIST>  |  Terminal: int
(transition def) Id Gramática: 1

Id Gramática: 1
Gramática: ['<VARIABLE>', '<VARIABLE_LIST>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <VARIABLE>

Desfileirando...
Símbolo TERMINAL no começo da fila: int

(transition def) Teste Transição --> Não Terminal: <VARIABLE>  |  Terminal: int
(transition def) Id Gramática: 3

Id Gramática: 3
Gramática: ['<TYPE_VARIABLE>', '<ATRIB>', 'tk_final']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <TYPE_VARIABLE>

Desfileirando...
Símbolo TERMINAL no começo da fila: int

(transition def) Teste Transição --> Não Terminal: <TYPE_VARIABLE>  |  Terminal: int
(transition def) Id Gramática: 5

Id Gramática: 5
Gramática: ['int']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: int
Sentença reconhecida: int -> int

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <ATRIB>

Desfileirando...
Símbolo TERMINAL no começo da fila: char

(transition def) Teste Transição --> Não Terminal: <ATRIB>  |  Terminal: char
(transition def) Id Gramática: 4

Id Gramática: 4
Gramática: ['char', '<LOGIC>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: char
Sentença reconhecida: char -> char

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <LOGIC>

Desfileirando...
Símbolo TERMINAL no começo da fila: tk_final

(transition def) Teste Transição --> Não Terminal: <LOGIC>  |  Terminal: tk_final
(transition def) Id Gramática: 30

Id Gramática: 30
Gramática: ['î']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_final
Sentença reconhecida: tk_final -> tk_final

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <VARIABLE_LIST>

Desfileirando...
Símbolo TERMINAL no começo da fila: outputKey

(transition def) Teste Transição --> Não Terminal: <VARIABLE_LIST>  |  Terminal: outputKey
(transition def) Id Gramática: 2

Id Gramática: 2
Gramática: ['î']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <COMMAND_LIST>

Desfileirando...
Símbolo TERMINAL no começo da fila: outputKey

(transition def) Teste Transição --> Não Terminal: <COMMAND_LIST>  |  Terminal: outputKey
(transition def) Id Gramática: 9

Id Gramática: 9
Gramática: ['<COMMAND>', '<COMMAND_LIST>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <COMMAND>

Desfileirando...
Símbolo TERMINAL no começo da fila: outputKey

(transition def) Teste Transição --> Não Terminal: <COMMAND>  |  Terminal: outputKey
(transition def) Id Gramática: 12

Id Gramática: 12
Gramática: ['<OUTPUT_CMD>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <OUTPUT_CMD>

Desfileirando...
Símbolo TERMINAL no começo da fila: outputKey

(transition def) Teste Transição --> Não Terminal: <OUTPUT_CMD>  |  Terminal: outputKey
(transition def) Id Gramática: 17

Id Gramática: 17
Gramática: ['outputKey', 'tk_abre_parenteses', '<SENTENCE>', 'tk_fecha_parenteses', 'tk_final']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: outputKey
Sentença reconhecida: outputKey -> outputKey

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_abre_parenteses
Sentença reconhecida: tk_abre_parenteses -> tk_abre_parenteses

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <SENTENCE>

Desfileirando...
Símbolo TERMINAL no começo da fila: Str

(transition def) Teste Transição --> Não Terminal: <SENTENCE>  |  Terminal: Str
(transition def) Id Gramática: 8

Id Gramática: 8
Gramática: ['Str']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: Str
Sentença reconhecida: Str -> Str

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_fecha_parenteses
Sentença reconhecida: tk_fecha_parenteses -> tk_fecha_parenteses

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_final
Sentença reconhecida: tk_final -> tk_final

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <COMMAND_LIST>

Desfileirando...
Símbolo TERMINAL no começo da fila: inputKey

(transition def) Teste Transição --> Não Terminal: <COMMAND_LIST>  |  Terminal: inputKey
(transition def) Id Gramática: 9

Id Gramática: 9
Gramática: ['<COMMAND>', '<COMMAND_LIST>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <COMMAND>

Desfileirando...
Símbolo TERMINAL no começo da fila: inputKey

(transition def) Teste Transição --> Não Terminal: <COMMAND>  |  Terminal: inputKey
(transition def) Id Gramática: 11

Id Gramática: 11
Gramática: ['<INPUT_CMD>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <INPUT_CMD>

Desfileirando...
Símbolo TERMINAL no começo da fila: inputKey

(transition def) Teste Transição --> Não Terminal: <INPUT_CMD>  |  Terminal: inputKey
(transition def) Id Gramática: 16

Id Gramática: 16
Gramática: ['inputKey', 'tk_abre_parenteses', 'char', 'tk_fecha_parenteses', 'tk_final']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: inputKey
Sentença reconhecida: inputKey -> inputKey

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_abre_parenteses
Sentença reconhecida: tk_abre_parenteses -> tk_abre_parenteses

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: char
Sentença reconhecida: char -> char

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_fecha_parenteses
Sentença reconhecida: tk_fecha_parenteses -> tk_fecha_parenteses

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_final
Sentença reconhecida: tk_final -> tk_final

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <COMMAND_LIST>

Desfileirando...
Símbolo TERMINAL no começo da fila: do

(transition def) Teste Transição --> Não Terminal: <COMMAND_LIST>  |  Terminal: do
(transition def) Id Gramática: 9

Id Gramática: 9
Gramática: ['<COMMAND>', '<COMMAND_LIST>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <COMMAND>

Desfileirando...
Símbolo TERMINAL no começo da fila: do

(transition def) Teste Transição --> Não Terminal: <COMMAND>  |  Terminal: do
(transition def) Id Gramática: 15

Id Gramática: 15
Gramática: ['<LOOP_CMD>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <LOOP_CMD>

Desfileirando...
Símbolo TERMINAL no começo da fila: do

(transition def) Teste Transição --> Não Terminal: <LOOP_CMD>  |  Terminal: do
(transition def) Id Gramática: 20

Id Gramática: 20
Gramática: ['<DO_LOOP>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <DO_LOOP>

Desfileirando...
Símbolo TERMINAL no começo da fila: do

(transition def) Teste Transição --> Não Terminal: <DO_LOOP>  |  Terminal: do
(transition def) Id Gramática: 24

Id Gramática: 24
Gramática: ['do', 'tk_abre_bloco', '<COMMAND_LIST>', 'until', 'tk_abre_parenteses', '<ID_LOGIC>', 'tk_fecha_parenteses', 'tk_final']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: do
Sentença reconhecida: do -> do

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_abre_bloco
Sentença reconhecida: tk_abre_bloco -> tk_abre_bloco

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <COMMAND_LIST>

Desfileirando...
Símbolo TERMINAL no começo da fila: char

(transition def) Teste Transição --> Não Terminal: <COMMAND_LIST>  |  Terminal: char
(transition def) Id Gramática: 9

Id Gramática: 9
Gramática: ['<COMMAND>', '<COMMAND_LIST>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <COMMAND>

Desfileirando...
Símbolo TERMINAL no começo da fila: char

(transition def) Teste Transição --> Não Terminal: <COMMAND>  |  Terminal: char
(transition def) Id Gramática: 14

Id Gramática: 14
Gramática: ['<MATH_CMD>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <MATH_CMD>

Desfileirando...
Símbolo TERMINAL no começo da fila: char

(transition def) Teste Transição --> Não Terminal: <MATH_CMD>  |  Terminal: char
(transition def) Id Gramática: 19

Id Gramática: 19
Gramática: ['char', 'tk_atrib', '<ID_ARITHMETIC>', 'tk_final']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: char
Sentença reconhecida: char -> char

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_atrib
Sentença reconhecida: tk_atrib -> tk_atrib

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <ID_ARITHMETIC>

Desfileirando...
Símbolo TERMINAL no começo da fila: char

(transition def) Teste Transição --> Não Terminal: <ID_ARITHMETIC>  |  Terminal: char
(transition def) Id Gramática: 32

Id Gramática: 32
Gramática: ['char', '<ARITHMETIC>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: char
Sentença reconhecida: char -> char

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <ARITHMETIC>

Desfileirando...
Símbolo TERMINAL no começo da fila: tk_multiplicacao

(transition def) Teste Transição --> Não Terminal: <ARITHMETIC>  |  Terminal: tk_multiplicacao
(transition def) Id Gramática: 39

Id Gramática: 39
Gramática: ['tk_multiplicacao', '<ID_ARITHMETIC>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_multiplicacao
Sentença reconhecida: tk_multiplicacao -> tk_multiplicacao

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <ID_ARITHMETIC>

Desfileirando...
Símbolo TERMINAL no começo da fila: char

(transition def) Teste Transição --> Não Terminal: <ID_ARITHMETIC>  |  Terminal: char
(transition def) Id Gramática: 32

Id Gramática: 32
Gramática: ['char', '<ARITHMETIC>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: char
Sentença reconhecida: char -> char

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <ARITHMETIC>

Desfileirando...
Símbolo TERMINAL no começo da fila: tk_final

(transition def) Teste Transição --> Não Terminal: <ARITHMETIC>  |  Terminal: tk_final
(transition def) Id Gramática: 42

Id Gramática: 42
Gramática: ['î']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_final
Sentença reconhecida: tk_final -> tk_final

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <COMMAND_LIST>

Desfileirando...
Símbolo TERMINAL no começo da fila: char

(transition def) Teste Transição --> Não Terminal: <COMMAND_LIST>  |  Terminal: char
(transition def) Id Gramática: 9

Id Gramática: 9
Gramática: ['<COMMAND>', '<COMMAND_LIST>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <COMMAND>

Desfileirando...
Símbolo TERMINAL no começo da fila: char

(transition def) Teste Transição --> Não Terminal: <COMMAND>  |  Terminal: char
(transition def) Id Gramática: 14

Id Gramática: 14
Gramática: ['<MATH_CMD>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <MATH_CMD>

Desfileirando...
Símbolo TERMINAL no começo da fila: char

(transition def) Teste Transição --> Não Terminal: <MATH_CMD>  |  Terminal: char
(transition def) Id Gramática: 19

Id Gramática: 19
Gramática: ['char', 'tk_atrib', '<ID_ARITHMETIC>', 'tk_final']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: char
Sentença reconhecida: char -> char

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_atrib
Sentença reconhecida: tk_atrib -> tk_atrib

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <ID_ARITHMETIC>

Desfileirando...
Símbolo TERMINAL no começo da fila: char

(transition def) Teste Transição --> Não Terminal: <ID_ARITHMETIC>  |  Terminal: char
(transition def) Id Gramática: 32

Id Gramática: 32
Gramática: ['char', '<ARITHMETIC>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: char
Sentença reconhecida: char -> char

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <ARITHMETIC>

Desfileirando...
Símbolo TERMINAL no começo da fila: tk_subtracao

(transition def) Teste Transição --> Não Terminal: <ARITHMETIC>  |  Terminal: tk_subtracao
(transition def) Id Gramática: 38

Id Gramática: 38
Gramática: ['tk_subtracao', '<ID_ARITHMETIC>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_subtracao
Sentença reconhecida: tk_subtracao -> tk_subtracao

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <ID_ARITHMETIC>

Desfileirando...
Símbolo TERMINAL no começo da fila: integer

(transition def) Teste Transição --> Não Terminal: <ID_ARITHMETIC>  |  Terminal: integer
(transition def) Id Gramática: 31

Id Gramática: 31
Gramática: ['integer', '<ARITHMETIC>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: integer
Sentença reconhecida: integer -> integer

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <ARITHMETIC>

Desfileirando...
Símbolo TERMINAL no começo da fila: tk_final

(transition def) Teste Transição --> Não Terminal: <ARITHMETIC>  |  Terminal: tk_final
(transition def) Id Gramática: 42

Id Gramática: 42
Gramática: ['î']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_final
Sentença reconhecida: tk_final -> tk_final

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <COMMAND_LIST>

Desfileirando...
Símbolo TERMINAL no começo da fila: until

(transition def) Teste Transição --> Não Terminal: <COMMAND_LIST>  |  Terminal: until
(transition def) Id Gramática: 10

Id Gramática: 10
Gramática: ['î']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: until
Sentença reconhecida: until -> until

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_abre_parenteses
Sentença reconhecida: tk_abre_parenteses -> tk_abre_parenteses

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <ID_LOGIC>

Desfileirando...
Símbolo TERMINAL no começo da fila: char

(transition def) Teste Transição --> Não Terminal: <ID_LOGIC>  |  Terminal: char
(transition def) Id Gramática: 25

Id Gramática: 25
Gramática: ['char', '<LOGIC>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: char
Sentença reconhecida: char -> char

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <LOGIC>

Desfileirando...
Símbolo TERMINAL no começo da fila: tk_menor_que

(transition def) Teste Transição --> Não Terminal: <LOGIC>  |  Terminal: tk_menor_que
(transition def) Id Gramática: 28

Id Gramática: 28
Gramática: ['tk_menor_que', '<ID_LOGIC>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_menor_que
Sentença reconhecida: tk_menor_que -> tk_menor_que

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <ID_LOGIC>

Desfileirando...
Símbolo TERMINAL no começo da fila: integer

(transition def) Teste Transição --> Não Terminal: <ID_LOGIC>  |  Terminal: integer
(transition def) Id Gramática: 26

Id Gramática: 26
Gramática: ['integer', '<LOGIC>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: integer
Sentença reconhecida: integer -> integer

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <LOGIC>

Desfileirando...
Símbolo TERMINAL no começo da fila: tk_fecha_parenteses

(transition def) Teste Transição --> Não Terminal: <LOGIC>  |  Terminal: tk_fecha_parenteses
(transition def) Id Gramática: 30

Id Gramática: 30
Gramática: ['î']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_fecha_parenteses
Sentença reconhecida: tk_fecha_parenteses -> tk_fecha_parenteses

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_final
Sentença reconhecida: tk_final -> tk_final

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <COMMAND_LIST>

Desfileirando...
Símbolo TERMINAL no começo da fila: outputKey

(transition def) Teste Transição --> Não Terminal: <COMMAND_LIST>  |  Terminal: outputKey
(transition def) Id Gramática: 9

Id Gramática: 9
Gramática: ['<COMMAND>', '<COMMAND_LIST>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <COMMAND>

Desfileirando...
Símbolo TERMINAL no começo da fila: outputKey

(transition def) Teste Transição --> Não Terminal: <COMMAND>  |  Terminal: outputKey
(transition def) Id Gramática: 12

Id Gramática: 12
Gramática: ['<OUTPUT_CMD>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <OUTPUT_CMD>

Desfileirando...
Símbolo TERMINAL no começo da fila: outputKey

(transition def) Teste Transição --> Não Terminal: <OUTPUT_CMD>  |  Terminal: outputKey
(transition def) Id Gramática: 17

Id Gramática: 17
Gramática: ['outputKey', 'tk_abre_parenteses', '<SENTENCE>', 'tk_fecha_parenteses', 'tk_final']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: outputKey
Sentença reconhecida: outputKey -> outputKey

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_abre_parenteses
Sentença reconhecida: tk_abre_parenteses -> tk_abre_parenteses

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <SENTENCE>

Desfileirando...
Símbolo TERMINAL no começo da fila: Str

(transition def) Teste Transição --> Não Terminal: <SENTENCE>  |  Terminal: Str
(transition def) Id Gramática: 8

Id Gramática: 8
Gramática: ['Str']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: Str
Sentença reconhecida: Str -> Str

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_fecha_parenteses
Sentença reconhecida: tk_fecha_parenteses -> tk_fecha_parenteses

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_final
Sentença reconhecida: tk_final -> tk_final

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <COMMAND_LIST>

Desfileirando...
Símbolo TERMINAL no começo da fila: outputKey

(transition def) Teste Transição --> Não Terminal: <COMMAND_LIST>  |  Terminal: outputKey
(transition def) Id Gramática: 9

Id Gramática: 9
Gramática: ['<COMMAND>', '<COMMAND_LIST>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <COMMAND>

Desfileirando...
Símbolo TERMINAL no começo da fila: outputKey

(transition def) Teste Transição --> Não Terminal: <COMMAND>  |  Terminal: outputKey
(transition def) Id Gramática: 12

Id Gramática: 12
Gramática: ['<OUTPUT_CMD>']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <OUTPUT_CMD>

Desfileirando...
Símbolo TERMINAL no começo da fila: outputKey

(transition def) Teste Transição --> Não Terminal: <OUTPUT_CMD>  |  Terminal: outputKey
(transition def) Id Gramática: 17

Id Gramática: 17
Gramática: ['outputKey', 'tk_abre_parenteses', '<SENTENCE>', 'tk_fecha_parenteses', 'tk_final']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: outputKey
Sentença reconhecida: outputKey -> outputKey

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_abre_parenteses
Sentença reconhecida: tk_abre_parenteses -> tk_abre_parenteses

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <SENTENCE>

Desfileirando...
Símbolo TERMINAL no começo da fila: char

(transition def) Teste Transição --> Não Terminal: <SENTENCE>  |  Terminal: char
(transition def) Id Gramática: 6

Id Gramática: 6
Gramática: ['char']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: char
Sentença reconhecida: char -> char

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_fecha_parenteses
Sentença reconhecida: tk_fecha_parenteses -> tk_fecha_parenteses

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_final
Sentença reconhecida: tk_final -> tk_final

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: <COMMAND_LIST>

Desfileirando...
Símbolo TERMINAL no começo da fila: tk_fecha_bloco

(transition def) Teste Transição --> Não Terminal: <COMMAND_LIST>  |  Terminal: tk_fecha_bloco
(transition def) Id Gramática: 10

Id Gramática: 10
Gramática: ['î']

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: tk_fecha_bloco
Sentença reconhecida: tk_fecha_bloco -> tk_fecha_bloco

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: endCode
Sentença reconhecida: endCode -> endCode

Desempilhando...
Símbolo NÃO TERMINAL no topo da pilha: $
Sentença reconhecida: $ -> $
